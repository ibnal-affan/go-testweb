# name: Hello World
# on: [push]
# jobs:
#   Hello-World-Job:
#     runs-on:
#       - codebuild-demo-go-testweb-${{ github.run_id }}-${{ github.run_attempt }}
#       - image:linux-5.0
#       - instance-size:small
#     steps:
#       - name: test shell echo
#         run: echo "test12345"

      # - name: Build the Docker image
      #   run: docker build -t my-image-name:$(date +%s) ../../

name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - test2
env:
  AWS_REGION: 'us-east-1'
  
jobs:
  build:
    name: Build Docker Image
    runs-on:
      - codebuild-demo-go-testweb-${{ github.run_id }}-${{ github.run_attempt }}
      - image:linux-5.0
      - instance-size:small
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set outputs
        id: vars
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}} 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: v1.0.0.${{ steps.vars.outputs.short_sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image_tag=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "${{ github.event.action }}"
    outputs:
      image_tag: ${{ steps.build.outputs.image_tag }}



# jobs:
#   build-and-push:
#     runs-on:
#       - codebuild-demo-go-testweb-${{ github.run_id }}-${{ github.run_attempt }}
#       - image:linux-5.0
#       - instance-size:small

#     steps:
#       - name: Setup AWS ECR Details
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           # aws-region: ${{env.AWS_REGION}}
#           aws-region: us-east-1

      # - name: Get secrets by name and by ARN
      #   uses: aws-actions/aws-secretsmanager-get-secrets@v2
      #   with:
      #     secret-ids: |
      #       arn:aws:secretsmanager:us-east-1:841162709195:secret:demo-go-testweb-qMO1ys

      # - name: Test Echo
      #   run: echo ${{ secrets.AWS_ACCESS_KEY_ID }}

      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: Log in to AWS ECR
      #   run: |
      #     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      # - name: Build Docker image
      #   run: |
      #     docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .

      # - name: Tag Docker image
      #   run: |
      #     docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REPOSITORY }}:latest

      # - name: Push Docker image to AWS ECR
      #   run: |
      #     docker push ${{ secrets.ECR_REPOSITORY }}:latest